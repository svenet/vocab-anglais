#!/usr/bin/python3
import streamlit as st
import json
import random
from pathlib import Path

# --- Chargement des mots ---
with open("words.json", "r", encoding="utf-8") as f:
    words = json.load(f)

# --- Chargement ou initialisation du progr√®s ---
progress_file = Path("progress.json")

if progress_file.exists():
    with open(progress_file, "r", encoding="utf-8") as f:
        progress = json.load(f)
else:
    progress = {entry["fr"]: {"en": entry["en"], "score": 0} for entry in words}

# --- Mode s√©lection ---
mode = st.sidebar.radio("Choisis un mode", ["√âvaluation initiale", "R√©vision quotidienne"])

# --- Nombre de mots ---
N = st.sidebar.slider("Nombre de mots aujourd'hui", 5, 50, 20)

# --- S√©lection des mots √† travailler ---
def mots_a_travailler():
    if mode == "√âvaluation initiale":
        return [k for k, v in progress.items() if v["score"] == 0][:N]
    else:
        return sorted(progress.items(), key=lambda x: x[1]["score"])[:N]

# --- Interface ---
st.title("üå± Apprentissage du vocabulaire anglais")
st.write(f"Mode : **{mode}**")

mots = mots_a_travailler()
r√©ponses = {}

if mots:
    for i, mot in enumerate(mots, 1):
        fr = mot if isinstance(mot, str) else mot[0]
        st.subheader(f"{i}. {fr}")
        r√©ponse = st.text_input(f"Traduction anglaise de ¬´ {fr} ¬ª", key=fr)
        r√©ponses[fr] = r√©ponse.lower().strip()
else:
    st.success("üéâ Tu as fini cette section !")

# --- Bouton valider ---
if st.button("Valider mes r√©ponses"):
    bonne_reponses = 0
    for fr, user_answer in r√©ponses.items():
        correct = progress[fr]["en"].lower()
        if user_answer == correct:
            st.success(f"‚úîÔ∏è {fr} = {correct}")
            progress[fr]["score"] += 1
            bonne_reponses += 1
        else:
            st.error(f"‚ùå {fr} ‚Üí {user_answer} | R√©ponse attendue : {correct}")
            progress[fr]["score"] = max(progress[fr]["score"] - 1, 0)

    st.info(f"‚úÖ {bonne_reponses}/{len(r√©ponses)} bonnes r√©ponses")

    # Sauvegarde
    with open(progress_file, "w", encoding="utf-8") as f:
        json.dump(progress, f, indent=2, ensure_ascii=False)
